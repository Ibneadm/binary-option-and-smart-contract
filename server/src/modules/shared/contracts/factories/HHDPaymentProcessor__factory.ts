/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HHDPaymentProcessor,
  HHDPaymentProcessorInterface,
} from "../HHDPaymentProcessor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hhdAdrress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "userId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    name: "PaymentDone",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "userId",
        type: "string",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610bdb380380610bdb833981810160405281019061003291906100ce565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100c881610129565b92915050565b6000602082840312156100e057600080fd5b60006100ee848285016100b9565b91505092915050565b600061010282610109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610132816100f7565b811461013d57600080fd5b50565b610a8c8061014f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633ccfd60b146100465780638da5cb5b14610050578063f1215d251461006e575b600080fd5b61004e61008a565b005b610058610294565b60405161006591906106f0565b60405180910390f35b610088600480360381019061008391906105dc565b6102b8565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610118576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010f90610800565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101d291906106f0565b60206040518083038186803b1580156101ea57600080fd5b505afa1580156101fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022291906105b3565b6040518363ffffffff1660e01b815260040161023f92919061076b565b602060405180830381600087803b15801561025957600080fd5b505af115801561026d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610291919061058a565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600082116102fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f2906107e0565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161035a92919061070b565b60206040518083038186803b15801561037257600080fd5b505afa158015610386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103aa91906105b3565b9050828110156103ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e690610820565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161044e93929190610734565b602060405180830381600087803b15801561046857600080fd5b505af115801561047c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a0919061058a565b507f5deda500cf2f51e0ae5ba5537859f938dadea1f0d406c57f7a1ad89ea5f24348338484426040516104d69493929190610794565b60405180910390a1505050565b60006104f66104f184610865565b610840565b90508281526020810184848401111561050e57600080fd5b6105198482856108fa565b509392505050565b60008151905061053081610a28565b92915050565b600082601f83011261054757600080fd5b81356105578482602086016104e3565b91505092915050565b60008135905061056f81610a3f565b92915050565b60008151905061058481610a3f565b92915050565b60006020828403121561059c57600080fd5b60006105aa84828501610521565b91505092915050565b6000602082840312156105c557600080fd5b60006105d384828501610575565b91505092915050565b600080604083850312156105ef57600080fd5b60006105fd85828601610560565b925050602083013567ffffffffffffffff81111561061a57600080fd5b61062685828601610536565b9150509250929050565b610639816108b2565b82525050565b600061064a82610896565b61065481856108a1565b9350610664818560208601610909565b61066d8161099c565b840191505092915050565b6000610685601c836108a1565b9150610690826109ad565b602082019050919050565b60006106a8600a836108a1565b91506106b3826109d6565b602082019050919050565b60006106cb6011836108a1565b91506106d6826109ff565b602082019050919050565b6106ea816108f0565b82525050565b60006020820190506107056000830184610630565b92915050565b60006040820190506107206000830185610630565b61072d6020830184610630565b9392505050565b60006060820190506107496000830186610630565b6107566020830185610630565b61076360408301846106e1565b949350505050565b60006040820190506107806000830185610630565b61078d60208301846106e1565b9392505050565b60006080820190506107a96000830187610630565b6107b660208301866106e1565b81810360408301526107c8818561063f565b90506107d760608301846106e1565b95945050505050565b600060208201905081810360008301526107f981610678565b9050919050565b600060208201905081810360008301526108198161069b565b9050919050565b60006020820190508181036000830152610839816106be565b9050919050565b600061084a61085b565b9050610856828261093c565b919050565b6000604051905090565b600067ffffffffffffffff8211156108805761087f61096d565b5b6108898261099c565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006108bd826108d0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561092757808201518184015260208101905061090c565b83811115610936576000848401525b50505050565b6109458261099c565b810181811067ffffffffffffffff821117156109645761096361096d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f416d6f756e74206d75737420626520626967676572207468616e203000000000600082015250565b7f6f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b7f506c7320617070726f7665206669727374000000000000000000000000000000600082015250565b610a31816108c4565b8114610a3c57600080fd5b50565b610a48816108f0565b8114610a5357600080fd5b5056fea2646970667358221220da67d321125ab78a02c6c80bfda45dd629d43cf6c8f076ea867680600c93260b64736f6c63430008010033";

export class HHDPaymentProcessor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    hhdAdrress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HHDPaymentProcessor> {
    return super.deploy(
      hhdAdrress,
      overrides || {}
    ) as Promise<HHDPaymentProcessor>;
  }
  getDeployTransaction(
    hhdAdrress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hhdAdrress, overrides || {});
  }
  attach(address: string): HHDPaymentProcessor {
    return super.attach(address) as HHDPaymentProcessor;
  }
  connect(signer: Signer): HHDPaymentProcessor__factory {
    return super.connect(signer) as HHDPaymentProcessor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HHDPaymentProcessorInterface {
    return new utils.Interface(_abi) as HHDPaymentProcessorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HHDPaymentProcessor {
    return new Contract(address, _abi, signerOrProvider) as HHDPaymentProcessor;
  }
}
