/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HHDPaymentProcessor,
  HHDPaymentProcessorInterface,
} from "../HHDPaymentProcessor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hhdCoin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "userId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    name: "PaymentDone",
    type: "event",
  },
  {
    inputs: [],
    name: "_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "userId",
        type: "string",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "buyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052620f424060025534801561001757600080fd5b5060405161107e38038061107e833981810160405281019061003991906100d5565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610147565b6000815190506100cf81610130565b92915050565b6000602082840312156100e757600080fd5b60006100f5848285016100c0565b91505092915050565b600061010982610110565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610139816100fe565b811461014457600080fd5b50565b610f28806101566000396000f3fe60806040526004361061004a5760003560e01c80633ccfd60b1461004f578063a482171914610066578063b2bdfa7b14610070578063e086e5ec1461009b578063f1215d25146100b2575b600080fd5b34801561005b57600080fd5b506100646100db565b005b61006e6102e5565b005b34801561007c57600080fd5b5061008561053e565b6040516100929190610a94565b60405180910390f35b3480156100a757600080fd5b506100b0610562565b005b3480156100be57600080fd5b506100d960048036038101906100d4919061095d565b610639565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610169576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016090610be4565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102239190610a94565b60206040518083038186803b15801561023b57600080fd5b505afa15801561024f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102739190610934565b6040518363ffffffff1660e01b8152600401610290929190610b0f565b602060405180830381600087803b1580156102aa57600080fd5b505af11580156102be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e2919061090b565b50565b60003411610328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031f90610ba4565b60405180910390fd5b6000600254346103389190610c76565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103979190610a94565b60206040518083038186803b1580156103af57600080fd5b505afa1580156103c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e79190610934565b90508181101561042c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042390610b84565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166108fc3373ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610489573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016104e7929190610b0f565b602060405180830381600087803b15801561050157600080fd5b505af1158015610515573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610539919061090b565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e790610be4565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610636573d6000803e3d6000fd5b50565b6000821161067c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067390610ba4565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016106db929190610aaf565b60206040518083038186803b1580156106f357600080fd5b505afa158015610707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072b9190610934565b905082811015610770576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076790610bc4565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016107cf93929190610ad8565b602060405180830381600087803b1580156107e957600080fd5b505af11580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610821919061090b565b507f5deda500cf2f51e0ae5ba5537859f938dadea1f0d406c57f7a1ad89ea5f24348338484426040516108579493929190610b38565b60405180910390a1505050565b600061087761087284610c29565b610c04565b90508281526020810184848401111561088f57600080fd5b61089a848285610d18565b509392505050565b6000815190506108b181610ec4565b92915050565b600082601f8301126108c857600080fd5b81356108d8848260208601610864565b91505092915050565b6000813590506108f081610edb565b92915050565b60008151905061090581610edb565b92915050565b60006020828403121561091d57600080fd5b600061092b848285016108a2565b91505092915050565b60006020828403121561094657600080fd5b6000610954848285016108f6565b91505092915050565b6000806040838503121561097057600080fd5b600061097e858286016108e1565b925050602083013567ffffffffffffffff81111561099b57600080fd5b6109a7858286016108b7565b9150509250929050565b6109ba81610cd0565b82525050565b60006109cb82610c5a565b6109d58185610c65565b93506109e5818560208601610d27565b6109ee81610de9565b840191505092915050565b6000610a06602283610c65565b9150610a1182610dfa565b604082019050919050565b6000610a29601c83610c65565b9150610a3482610e49565b602082019050919050565b6000610a4c601183610c65565b9150610a5782610e72565b602082019050919050565b6000610a6f600b83610c65565b9150610a7a82610e9b565b602082019050919050565b610a8e81610d0e565b82525050565b6000602082019050610aa960008301846109b1565b92915050565b6000604082019050610ac460008301856109b1565b610ad160208301846109b1565b9392505050565b6000606082019050610aed60008301866109b1565b610afa60208301856109b1565b610b076040830184610a85565b949350505050565b6000604082019050610b2460008301856109b1565b610b316020830184610a85565b9392505050565b6000608082019050610b4d60008301876109b1565b610b5a6020830186610a85565b8181036040830152610b6c81856109c0565b9050610b7b6060830184610a85565b95945050505050565b60006020820190508181036000830152610b9d816109f9565b9050919050565b60006020820190508181036000830152610bbd81610a1c565b9050919050565b60006020820190508181036000830152610bdd81610a3f565b9050919050565b60006020820190508181036000830152610bfd81610a62565b9050919050565b6000610c0e610c1f565b9050610c1a8282610d5a565b919050565b6000604051905090565b600067ffffffffffffffff821115610c4457610c43610dba565b5b610c4d82610de9565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610c8182610d0e565b9150610c8c83610d0e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cc557610cc4610d8b565b5b828202905092915050565b6000610cdb82610cee565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610d45578082015181840152602081019050610d2a565b83811115610d54576000848401525b50505050565b610d6382610de9565b810181811067ffffffffffffffff82111715610d8257610d81610dba565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4d617962652074686520636f6e7472616374206973206f7574206f66206d6f6e60008201527f6579000000000000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e74206d75737420626520626967676572207468616e203000000000600082015250565b7f506c7320617070726f7665206669727374000000000000000000000000000000600082015250565b7f6f6e6c79205f6f776e6572000000000000000000000000000000000000000000600082015250565b610ecd81610ce2565b8114610ed857600080fd5b50565b610ee481610d0e565b8114610eef57600080fd5b5056fea264697066735822122028e4b85bffc5c0affdc44bd2da9789d944d5368b3d9389540a694b519217913164736f6c63430008010033";

export class HHDPaymentProcessor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    hhdCoin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HHDPaymentProcessor> {
    return super.deploy(
      hhdCoin,
      overrides || {}
    ) as Promise<HHDPaymentProcessor>;
  }
  getDeployTransaction(
    hhdCoin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hhdCoin, overrides || {});
  }
  attach(address: string): HHDPaymentProcessor {
    return super.attach(address) as HHDPaymentProcessor;
  }
  connect(signer: Signer): HHDPaymentProcessor__factory {
    return super.connect(signer) as HHDPaymentProcessor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HHDPaymentProcessorInterface {
    return new utils.Interface(_abi) as HHDPaymentProcessorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HHDPaymentProcessor {
    return new Contract(address, _abi, signerOrProvider) as HHDPaymentProcessor;
  }
}
